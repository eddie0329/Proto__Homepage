{"ast":null,"code":"var _jsxFileName = \"/home/eddie/Proto__Homepage/my-homepage/src/components/Portfolios/SeoulRouteMaker/SeoulRouteMakerContent.jsx\";\nimport React, { Component } from \"react\";\nimport Dialog_Picture from \"./images/Dialog.png\";\nimport Map_Picture from \"./images/Map.png\";\nimport Use_Case_Diagram from \"./images/use_case.png\";\nimport Logical_Architect from \"./images/Logical.png\";\nimport Physical_Architect from \"./images/Physical.png\";\nimport { Table } from \"antd\";\nconst dataSource = [{\n  key: \"1\",\n  No: \"1-1\",\n  Specification: \"User choose the region\",\n  Input: \"region\",\n  Output: \"\"\n}, {\n  key: \"2\",\n  No: \"1-2\",\n  Specification: \"User choose their preferences\",\n  Input: \"categories\",\n  Output: \"\"\n}, {\n  key: \"3\",\n  No: \"1-3\",\n  Specification: \"User choose thier size of group\",\n  Input: \"Size of Group\",\n  Output: \"\"\n}, {\n  key: \"4\",\n  No: \"1-4\",\n  Specification: \"User can add favorite their route\",\n  Input: \"\",\n  Output: \"\"\n}, {\n  key: \"5\",\n  No: \"1-5\",\n  Specification: \"User can lookup their favorites\",\n  Input: \"\",\n  Output: \"\"\n}, {\n  key: \"6\",\n  No: \"1-6\",\n  Specification: \"User can delete their favorites\",\n  Input: \"\",\n  Output: \"\"\n}, {\n  key: \"7\",\n  No: \"1-7\",\n  Specification: \"User can request the places\",\n  Input: \"Name, region, phone number, open/close time, size of group, availabe seasons ,explainations, category\",\n  Output: \"\"\n}, {\n  key: \"8\",\n  No: \"1-8\",\n  Specification: \"User can search their own places\",\n  Input: \"categories\",\n  Output: \"\"\n}, {\n  key: \"9\",\n  No: \"2-1\",\n  Specification: \"Manager can search places with name\",\n  Input: \"Name, region, phone number, open/close time, size of group, availabe seasons ,explainations, category\",\n  Output: \"\"\n}, {\n  key: \"10\",\n  No: \"2-2\",\n  Specification: \"Manager can search places with region\",\n  Input: \"Name, region, phone number, open/close time, size of group, availabe seasons ,explainations, category\",\n  Output: \"\"\n}, {\n  key: \"11\",\n  No: \"2-3\",\n  Specification: \"Manager can modify the place\",\n  Input: \"modified information\",\n  Output: \"\"\n}, {\n  key: \"12\",\n  No: \"2-4\",\n  Specification: \"Manager can delete places\",\n  Input: \"\",\n  Output: \"\"\n}, {\n  key: \"13\",\n  No: \"2-5\",\n  Specification: \"Manager can add places\",\n  Input: \"Name, region, phone number, open/close time, size of group, availabe seasons ,explainations, category\",\n  Output: \"\"\n}];\nconst columns = [{\n  title: \"No\",\n  dataIndex: \"No\",\n  key: \"no\"\n}, {\n  title: \"Specification\",\n  dataIndex: \"Specification\",\n  key: \"specification\"\n}, {\n  title: \"Input\",\n  dataIndex: \"Input\",\n  key: \"input\"\n}, {\n  title: \"Output\",\n  dataIndex: \"Output\",\n  key: \"output\"\n}];\nexport class SeoulRouteMakerContent extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        overflowX: \"hidden\",\n        overflowY: \"auto\",\n        height: \"550px\",\n        paddingRight: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"0. Introduction\"), React.createElement(\"img\", {\n      src: Dialog_Picture,\n      alt: \"Dialog Picture\",\n      style: {\n        width: \"600px\",\n        height: \"500px\",\n        display: \"inline\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: Map_Picture,\n      alt: \"Map Picture\",\n      style: {\n        width: \"400px\",\n        height: \"500px\",\n        display: \"inline\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"\\xA0\\xA0\\xA0\\xA0\\xA0Seoul Route Maker is implemented with java and mysql. It helps people to easily make course, including dining, amusement and accomodation, based on user's preferences. This team project largly deals with database system. And I was resposible of architecting database system in this project.\"), React.createElement(\"h2\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"1. Architect\"), React.createElement(\"h3\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"1.1 User Specification\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"\\xA0\\xA0\\xA0\\xA0\\xA0Seoul Route Maker System creates courses that include dining, amusement, accomodation within the city of Seoul. Firstly, user checks their region, that they will visit or currently positioned. The regions are specified with different 5 places, kondae, hongdae, itaewon, kangnam. Secondly, user should check their favorites within categories. There are numerous selections, which is dining, cafe, amusement, shopping, theater. In addition, dining is divided by korean cuisine, japanese cuisine, chinese cuisine, and western cuisin. Thirdly, user must choose their size of group. If there are less then 3, then they have to choose group of small. Else, they have to choose large. Finally, if user wants to stay overnight choose accomodation. After all of theses set-ups, the system provides courses that will satisfy user's needs. The provided courses are generated mainly with date, time, and number of people. The date and time must be considered because the stores should open when user visits. And there are some stores limits the size of group because of the size of their store. After enjoying the whole somelike tour, user can add preference the service of specific stores or amusements within the course. User can simply add preference that will provide other users who choose similar set-ups.\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"\\xA0\\xA0\\xA0\\xA0\\xA0Not only providing routes, but also requesting stores or amusements or accomodations is possible. Users simply request to manager to add some facilities that were not in the database. Manager overviews the request and decide whether to add places in the database. Furthermore, like other managers do, manager can manage the database like data base administrator.\"), React.createElement(\"h3\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"1.2 Use-Case Diagram\"), React.createElement(\"img\", {\n      src: Use_Case_Diagram,\n      alt: \"Use Case Diagram\",\n      style: {\n        display: \"block\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        width: \"600px\",\n        height: \"425px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\"), React.createElement(\"h3\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"1.3 Function Specification\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"1: USER\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"2: MANAGER\"), React.createElement(Table, {\n      pagination: {\n        pageSize: \"8\"\n      },\n      indentSize: 1,\n      dataSource: dataSource,\n      columns: columns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"1.4 DataBase Architects\"), React.createElement(\"h4\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"1.4.1 Logical Architect\"), React.createElement(\"img\", {\n      src: Logical_Architect,\n      style: {\n        width: \"900px\",\n        height: \"500px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"1.4.2 Physical Architect\"), React.createElement(\"img\", {\n      src: Physical_Architect,\n      style: {\n        width: \"900px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"2. Implementation\"), React.createElement(\"h3\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"2.1 User Perspective\"), React.createElement(\"h3\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"2.2 Manager Perspective\"), React.createElement(\"h2\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"0. Conclusion\"), React.createElement(\"h2\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Appendix A. References\"), React.createElement(\"h2\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Appendix B. Data Base Scripts\"));\n  }\n\n}\nexport default SeoulRouteMakerContent;","map":{"version":3,"sources":["/home/eddie/Proto__Homepage/my-homepage/src/components/Portfolios/SeoulRouteMaker/SeoulRouteMakerContent.jsx"],"names":["React","Component","Dialog_Picture","Map_Picture","Use_Case_Diagram","Logical_Architect","Physical_Architect","Table","dataSource","key","No","Specification","Input","Output","columns","title","dataIndex","SeoulRouteMakerContent","render","overflowX","overflowY","height","paddingRight","fontWeight","width","display","marginLeft","marginRight","pageSize"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Dialog_Picture from \"./images/Dialog.png\";\nimport Map_Picture from \"./images/Map.png\";\nimport Use_Case_Diagram from \"./images/use_case.png\";\nimport Logical_Architect from \"./images/Logical.png\"\nimport Physical_Architect from \"./images/Physical.png\"\nimport { Table } from \"antd\";\n\nconst dataSource = [\n  {\n    key: \"1\",\n    No: \"1-1\",\n    Specification: \"User choose the region\",\n    Input: \"region\",\n    Output: \"\"\n  },\n  {\n    key: \"2\",\n    No: \"1-2\",\n    Specification: \"User choose their preferences\",\n    Input: \"categories\",\n    Output: \"\"\n  },\n  {\n    key: \"3\",\n    No: \"1-3\",\n    Specification: \"User choose thier size of group\",\n    Input: \"Size of Group\",\n    Output: \"\"\n  },\n  {\n    key: \"4\",\n    No: \"1-4\",\n    Specification: \"User can add favorite their route\",\n    Input: \"\",\n    Output: \"\"\n  },\n  {\n    key: \"5\",\n    No: \"1-5\",\n    Specification: \"User can lookup their favorites\",\n    Input: \"\",\n    Output: \"\"\n  },\n  {\n    key: \"6\",\n    No: \"1-6\",\n    Specification: \"User can delete their favorites\",\n    Input: \"\",\n    Output: \"\"\n  },\n  {\n    key: \"7\",\n    No: \"1-7\",\n    Specification: \"User can request the places\",\n    Input:\n      \"Name, region, phone number, open/close time, size of group, availabe seasons ,explainations, category\",\n    Output: \"\"\n  },\n  {\n    key: \"8\",\n    No: \"1-8\",\n    Specification: \"User can search their own places\",\n    Input: \"categories\",\n    Output: \"\"\n  },\n  {\n    key: \"9\",\n    No: \"2-1\",\n    Specification: \"Manager can search places with name\",\n    Input: \"Name, region, phone number, open/close time, size of group, availabe seasons ,explainations, category\",\n    Output: \"\"\n  },\n  {\n    key: \"10\",\n    No: \"2-2\",\n    Specification: \"Manager can search places with region\",\n    Input: \"Name, region, phone number, open/close time, size of group, availabe seasons ,explainations, category\",\n    Output: \"\"\n  },\n  {\n    key: \"11\",\n    No: \"2-3\",\n    Specification: \"Manager can modify the place\",\n    Input: \"modified information\",\n    Output: \"\"\n  },\n  {\n    key: \"12\",\n    No: \"2-4\",\n    Specification: \"Manager can delete places\",\n    Input: \"\",\n    Output: \"\"\n  },\n  {\n    key: \"13\",\n    No: \"2-5\",\n    Specification: \"Manager can add places\",\n    Input: \"Name, region, phone number, open/close time, size of group, availabe seasons ,explainations, category\",\n    Output: \"\"\n  },\n];\n\nconst columns = [\n  {\n    title: \"No\",\n    dataIndex: \"No\",\n    key: \"no\"\n  },\n  {\n    title: \"Specification\",\n    dataIndex: \"Specification\",\n    key: \"specification\"\n  },\n  {\n    title: \"Input\",\n    dataIndex: \"Input\",\n    key: \"input\"\n  },\n  {\n    title: \"Output\",\n    dataIndex: \"Output\",\n    key: \"output\"\n  }\n];\n\nexport class SeoulRouteMakerContent extends Component {\n  render() {\n    return (\n      <div\n        style={{\n          overflowX: \"hidden\",\n          overflowY: \"auto\",\n          height: \"550px\",\n          paddingRight: \"10px\"\n        }}\n      >\n        <h2 style={{ fontWeight: \"bold\" }}>0. Introduction</h2>\n        <img\n          src={Dialog_Picture}\n          alt=\"Dialog Picture\"\n          style={{ width: \"600px\", height: \"500px\", display: \"inline\" }}\n        />\n        <img\n          src={Map_Picture}\n          alt=\"Map Picture\"\n          style={{ width: \"400px\", height: \"500px\", display: \"inline\" }}\n        />\n        <p>\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Seoul Route Maker is implemented with\n          java and mysql. It helps people to easily make course, including\n          dining, amusement and accomodation, based on user's preferences. This\n          team project largly deals with database system. And I was resposible\n          of architecting database system in this project.\n        </p>\n        <h2 style={{ fontWeight: \"bold\" }}>1. Architect</h2>\n        <h3 style={{ fontWeight: \"bold\" }}>1.1 User Specification</h3>\n        <p>\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Seoul Route Maker System creates courses\n          that include dining, amusement, accomodation within the city of Seoul.\n          Firstly, user checks their region, that they will visit or currently\n          positioned. The regions are specified with different 5 places, kondae,\n          hongdae, itaewon, kangnam. Secondly, user should check their favorites\n          within categories. There are numerous selections, which is dining,\n          cafe, amusement, shopping, theater. In addition, dining is divided by\n          korean cuisine, japanese cuisine, chinese cuisine, and western cuisin.\n          Thirdly, user must choose their size of group. If there are less then\n          3, then they have to choose group of small. Else, they have to choose\n          large. Finally, if user wants to stay overnight choose accomodation.\n          After all of theses set-ups, the system provides courses that will\n          satisfy user's needs. The provided courses are generated mainly with\n          date, time, and number of people. The date and time must be considered\n          because the stores should open when user visits. And there are some\n          stores limits the size of group because of the size of their store.\n          After enjoying the whole somelike tour, user can add preference the\n          service of specific stores or amusements within the course. User can\n          simply add preference that will provide other users who choose similar\n          set-ups.\n        </p>\n        <p>\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Not only providing routes, but also\n          requesting stores or amusements or accomodations is possible. Users\n          simply request to manager to add some facilities that were not in the\n          database. Manager overviews the request and decide whether to add\n          places in the database. Furthermore, like other managers do, manager\n          can manage the database like data base administrator.\n        </p>\n        <h3 style={{ fontWeight: \"bold\" }}>1.2 Use-Case Diagram</h3>\n        <img\n          src={Use_Case_Diagram}\n          alt=\"Use Case Diagram\"\n          style={{\n            display: \"block\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            width: \"600px\",\n            height: \"425px\"\n          }}\n        />\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\n        <h3 style={{ fontWeight: \"bold\" }}>1.3 Function Specification</h3>\n        <h4>1: USER</h4>\n        <h4>2: MANAGER</h4>\n        <Table\n          pagination={{ pageSize: \"8\" }}\n          indentSize={1}\n          dataSource={dataSource}\n          columns={columns}\n        />\n\n\n        <h3 style={{ fontWeight: \"bold\" }}>1.4 DataBase Architects</h3>\n        <h4 style={{ fontWeight: \"bold\" }}>1.4.1 Logical Architect</h4>\n        <img src={Logical_Architect} style={{width: \"900px\", height: \"500px\"}}/>\n\n        <h4 style={{ fontWeight: \"bold\"  }}>1.4.2 Physical Architect</h4>\n        <img src={Physical_Architect} style={{width: \"900px\"}}/>\n\n\n        <h2 style={{ fontWeight: \"bold\" }}>2. Implementation</h2>\n        <h3 style={{ fontWeight: \"bold\" }}>2.1 User Perspective</h3>\n        <h3 style={{ fontWeight: \"bold\" }}>2.2 Manager Perspective</h3>\n        <h2 style={{ fontWeight: \"bold\" }}>0. Conclusion</h2>\n        <h2 style={{ fontWeight: \"bold\" }}>Appendix A. References</h2>\n        <h2 style={{ fontWeight: \"bold\" }}>Appendix B. Data Base Scripts</h2>\n        \n      </div>\n    );\n  }\n}\n\nexport default SeoulRouteMakerContent;\n"]},"metadata":{},"sourceType":"module"}